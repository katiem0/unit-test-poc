# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
      issues: write
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore unit-test-poc.sln
    - name: Build
      run: dotnet build unit-test-poc.sln --configuration Release --no-restore
    - name: Test
      run: dotnet test unit-test-poc.sln  --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: coverage/**/coverage.cobertura.xml
        badge: true
        fail_below_min: false
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'

    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: code-coverage-results.md      
    - name: Produce the coverage report and comment
      uses: insightsengineering/coverage-action@v2
      with:
        # Path to the Cobertura XML report.
        path: ./coverage/**/coverage.cobertura.xml
        # Minimum total coverage, if you want to the
        # workflow to enforce it as a standard.
        # This has no effect if the `fail` arg is set to `false`.
        threshold: 80.123
        # Fail the workflow if the minimum code coverage
        # reuqirements are not satisfied.
        fail: false
        # Publish the rendered output as a PR comment
        publish: true
        # Create a coverage diff report.
        diff: true
        # Branch to diff against.
        # Compare the current coverage to the coverage
        # determined on this branch.
        diff-branch: main
        # This is where the coverage reports for the
        # `diff-branch` are stored.
        # Branch is created if it doesn't already exist'.
        diff-storage: _xml_coverage_reports
    - uses: 5monkeys/cobertura-action@master
      name: An Additional Commenting option
      with:
        path: ./coverage/**/coverage.cobertura.xml
        minimum_coverage: 75
        link_missing_lines: true
        link_missing_lines_source_dir: 'unit-test-poc'
        show_missing: true
        show_line: true
        show_branch: true
        show_class_names: true
